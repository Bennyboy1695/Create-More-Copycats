def generatedResources = file("src/generated")

loom {
    runs {
        client {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }
        server {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }
        data {
            data()
            programArgs "--all", "--mod", "create_more_copycats"
            programArgs "--output", generatedResources.absolutePath
        }
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"

    modImplementation("com.tterrag.registrate:Registrate:${forge_registrate_version}")
    modImplementation("com.jozufozu.flywheel:flywheel-forge-${forge_flywheel_minecraft_version}:${forge_flywheel_version}")
    modImplementation("com.simibubi.create:create-${forge_create_minecraft_version}:${forge_create_version}:slim") { transitive = false }
    modRuntimeOnly("curse.maven:create-connected-947914:4991527")
    modRuntimeOnly("curse.maven:framedblocks-441647:4762544")
}

sourceSets {
    main {
        resources.srcDir generatedResources
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}


jar {
    archiveClassifier.set("dev")
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
